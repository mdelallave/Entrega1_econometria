%% Limpiamos
close('all')
clearvars
clc

%% Importar datos
% data = xlsread('ibex.csv','B3:C1558');
% ibex = data; 
% En el mac no me va la función de importar datos con xlsread. Probad si
% funciona.

%% Hacemos un gráfico con Ibex
figure(1);
plot(ibex);
title('Ibex');
figure(2)
subplot(2,1,1);
autocorr(ibex,20);
title('ACF del IBEX');
subplot(2,1,2);
parcorr(ibex,20); 
title('PACF del  IBEX');

%% Analisis de estacionariedad.
% Aplicamos un gráfico media-varianza
part=100;
[med,dtip] = graf_m_std(ibex,part);
% No queda claro si los datos en nivel presentan estacionariedad mediante
% el gráfico media varianza. Sin embargo, observando la ACF sí.

%% Manipulación de los datos
% Transformación logarítmica (rendimientos)
libex = 100*log(ibex);
figure(3)
plot(libex)

% Estudiamos su estacionariedad
figure(4);
subplot(2,1,1);
autocorr(libex,20);
title('ACF del log del IBEX');
subplot(2,1,2);
parcorr(libex,20); 
title('PACF del log del IBEX');

% Vemos como la ACF toma valores muy altos que no tienden a desaparecer.
% Indica ausencia de estacionariedad.

%% Tomamos primeras diferencias y analizamos estacionariedad.
dlibex=libex(2:end)-libex(1:end-1);
figure(5);
plot(dlibex);
title('Rendimiento del Ibex');
figure(6);
subplot(2,1,1);
autocorr(dlibex,20); 
title('ACF del Rendimiento del Ibex');
subplot(2,1,2);
parcorr(dlibex,20);
title('PACF del Rendimiento del Ibex');

% LA ACF ya no presenta infinitos valores significativos. La serie presenta
% estacionariedad. Sin embargo, dlibex presenta un valor muy grande en la
% observación 958 que mas tarde trataremos de controlar mediante una variable dummy.

%% Modelo
modelo1=arima('ARlags',[4,5,12], 'MAlags', [4,5,12], 'D', 1);
estmodelo1=estimate(modelo1,libex); 
% Estimamos un modelo ARIMA(1,1,1) sobre el modelo en logaritmos.
% La constante y el AR(12) no son significativas.

%% Hacemos inferencia
[res,varres,logL] = infer(estmodelo1,libex); %inferencia sobre el modelo.
resstd1 = res/sqrt(estmodelo1.Variance);
[h,p,jbstat,critval] = jbtest(resstd1, 0.01) 
%test jarque bera. h=1 rechazo normalidad.
figure;
subplot(2,2,1);
plot(resstd1); 
title('Residuos estandarizados modelo 1');
subplot(2,2,2);
histogram(resstd1,10);
title('Residuos Estandarizados modelo 1')
subplot(2,2,3);
autocorr(resstd1,16);
subplot(2,2,4);
parcorr(resstd1,16);
%% Modelo 2
modelo2=arima('Constant',0,'ARLags',[4,5],'MALags',[4,9,12],'D',1);
estmodelo2=estimate(modelo2,libex); 

% MA(12) no es significativo.
%% Modelo 3
modelo3 = arima('Constant',0,'ARLags',[4,5],'MALags',[4,9],'D',1);
estmodelo3=estimate(modelo3,libex); 
% Ahora todos los coeficientes son significativos.

%% Hacemos inferencia con el modelo 3
[res3,varres3,logL3] = infer(estmodelo3,libex); %inferencia sobre el modelo.
resstd3 = res3/sqrt(estmodelo3.Variance);
[h2,p2,jbstat2,critval2]=jbtest(resstd3,0.01) 
%test jarque bera. h=1 -> rechazo normalidad.
figure;
subplot(2,2,1);
plot(resstd3); 
title('Residuos estandarizados modelo 3');
subplot(2,2,2);
histogram(resstd3,10);
title('Residuos Estandarizados modelo 3')
subplot(2,2,3);
autocorr(resstd3,16);
subplot(2,2,4);
parcorr(resstd3,16);
% Parece que queda algo de estructura en los retardos 2, 11, 12. Lo
% tratamos en el modelo 4.

%% Modelo 4
modelo4 = arima('Constant',0,'ARLags',[2,4,5,11,12],'MALags',[4,9,11,12],'D',1);
estmodelo4 = estimate(modelo4,libex); 

% El MA(12) no es significativo en el modelo, por lo que lo eliminamos.
%% Hacemos inferencia del modelo 4
[res4,varres4,logL4] = infer(estmodelo4,libex); %inferencia sobre el modelo.
resstd4 = res4/sqrt(estmodelo4.Variance);
[h2,p2,jbstat2,critval2] = jbtest(resstd4,0.01) 
%test jarque bera. h=1 -> rechazo normalidad.
figure;
subplot(2,2,1);
plot(resstd4); 
title('Residuos estandarizados modelo 4');
subplot(2,2,2);
histogram(resstd4,10);
title('Residuos Estandarizados modelo 4')
subplot(2,2,3);
autocorr(resstd4,16);
subplot(2,2,4);
parcorr(resstd4,16);

% Comprobando la ACF y la PACF, vemos que ahora los residuos son r.b..

%% Función impulso
% Contruimos una variable dummy para controlar el outlier que aparece en la
% observación 958.
dummyImp = zeros(1569,1);
dummyImp(958) = 1;

%% Modelo 5
modelo5=arima('Constant',0,'ARLags',[2,4,5,11,12],'MALags',[4,9,11,12],'D',1);
estmodelo5 = estimate(modelo5,libex,'X', dummyImp); 

% La variable dummy no es significativa. La eliminamos del modelo. Nos
% quedamos con el modelo 4 como modelo definitivo.

%% Hacemos una predicción

[libex_f,var_errorf] = forecast(estmodelo4,56,'Y0', libex);
b_inferior = libex_f - 1.96*sqrt(var_errorf);
b_superior = libex_f + 1.96*sqrt(var_errorf);
figure;
plot(libex,'Color',[.7,.7,.7]);
hold on
h1 = plot(1556:1611,b_inferior,'r:','LineWidth',2);
plot(1556:1611,b_superior,'r:','LineWidth',2)
h2 = plot(1556:1611,libex_f,'k','LineWidth',2); %predicción
legend([h1 h2],'Intervalo al 95% de confianza','Predicción puntual',...
	     'Location','NorthWest')
title('Predicción del Ibex a cierre de año')
hold off

%% Hacemos simulación para obtener una distribución empirica
% en la fecha de interés

n = 10000; % número de valores aleatorios.
var_res4 = varres4(1,1); %varianza residuos para el modelo estimado (Constante)
epsilon = normrnd(0, var_res4, n,1); 
libex_s = zeros(n,1);

for i = 1:n
    libex_s(i) = libex_f(56,1) + epsilon(i);
end

mu_sim = mean(libex_s)
var_sim = var(libex_s)

%% Probabilidad de que acabe el año con una ganancia respecto al último dato.

X = (libex(1556,1) - mu_sim)/sqrt(var_sim);
P = normpdf(X,0,1)





